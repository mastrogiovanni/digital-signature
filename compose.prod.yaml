services:

  traefik:
    command:
      - "--providers.docker.constraints=Label(`docker.project`,`etaireia`)"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--api.insecure=true"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "443:443/tcp"
    volumes:
      - "./letsencrypt:/letsencrypt"

  frontend:
    labels:
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls=true"
      - "traefik.http.routers.frontend.tls.certresolver=myresolver"
      - "traefik.http.routers.frontend.rule=Host(`${NODE_HOST}`) && PathPrefix(`/`)"

  json-server:
      labels:
        - "traefik.http.routers.json-server.entrypoints=websecure"
        - "traefik.http.routers.json-server.tls=true"
        - "traefik.http.routers.json-server.tls.certresolver=myresolver"
        - "traefik.http.routers.json-server.rule=Host(`${NODE_HOST}`) && PathPrefix(`/api/v1`)"
